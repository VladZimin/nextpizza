generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String   @unique
  password String
  role     UserRole @default(USER)
  verified DateTime

  provider   String?
  providerId String?

  cart             Cart?
  orders           Order[]
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())

  name     String    @unique
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String

  ingredients Ingredient[]
  variations  ProductVariation[]

  category    Category           @relation(fields: [categoryId], references: [id])
  categoryId  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariation {
  id Int @id @default(autoincrement())

  price     Int
  size      Int?
  pizzaType Int?

  cartItems CartItem[]

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id Int @id @default(autoincrement())

  name     String
  imageUrl String
  price    Int

  products  Product[]
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  totalAmount Int     @default(0)
  token       String

  user      User?      @relation(fields: [userId], references: [id])
  userId    Int?       @unique
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  quantity Int    @default(0)

  cart               Cart             @relation(fields: [cartId], references: [id])
  cartId             Int              @unique
  productVariation   ProductVariation @relation(fields: [productVariationId], references: [id])
  productVariationId Int              @unique

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  token       String
  totalAmount Int
  status      OrderStatus
  paymentId   String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  fullName String
  email    String
  phone    String
  addres   String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String @unique

  createdAt DateTime @default(now())

  @@unique([userId, code])
}

enum OrderStatus {
  PENDING
  SUCCEECED
  CANCELLED
}

enum UserRole {
  ADMIN
  USER
}
